width: "60%",
 
paddingRight: "1rem",
 
{/* <div className="">
              <div className="row">
                <div className="col-xl-3 col-lg-3 col-md-6 col-sm-6 col-6">
                  <div className="">
                    <p className="text-start mb-0">DOB in Words</p>
                  </div>
                </div>
                <div className="col-xl-9 col-lg-9 col-md-6 col-sm-6 col-6">
                  {" "}
                  <p className="text-start mb-0">Third June Two Thousand Twenty</p>
                  <hr />
                </div>
              </div>
            </div> */}
 
container
 
// padding: 0;
 
/* Your print styles go here */
 
alert("clicked");
 

// export const getStudentBirthCertificateviaId = (req, res) => {
//   const studentId = req.params.id;

//   try {
//     const getquery = "SELECT birth_certificate FROM register WHERE id = ?";

//     // Use a promise or async/await to handle the database query
//     db.query(getquery, [studentId], (err, result) => {
//       if (err) {
//         console.log("Error in fetching data:", err);
//         res.status(500).json({ error: "Error in fetching data" });
//       } else {
//         if (result.length === 0) {
//           res.status(404).json({ error: "Student not found" });
//         } else {
//           res
//             .status(200)
//             .json({ birthCertificate: result[0].birth_certificate });
//         }
//       }
//     });
//   } catch (error) {
//     console.log(error);
//     res
//       .status(500)
//       .json({ error: "An error occurred while fetching student data" });
//   }
// };
 
downloadError
 
import fs from 'fs';
import axios from 'axios';
 
return;
 
return;
 
 // const [selectedDate, setSelectedDate] = useState(null);
  // const [payStats, setPayStats] = useState("Pending");
 
{
            ...user.data,
            birthCertificateFileName: birthCertificateFileName,
          },
 
r user data object
      birthCertificateFileName: birthCertificateFileName, // Assuming you have this in your state
 
const file = req.file;
      const imageUrl = `http://localhost:${PORT}/uploads/${file.filename}`;
 
 imageUrls.push(imageUrl);
 
// Your user data object
 
// Assuming you have this in your state
 
.data,
          birthCertificateFileName,
 
birthCertificateFileName,
 
 birthCertificateFileName,
 
bi
 
 birth_certificate: "",
 
// alert("clicked");
    const user = {
      data,
    };
    // console.log(user.data.firstname, user.data.lastname);
    // const studentName = user.data.firstname + " " + user.data.lastname;
    // console.log(studentName);
    // const isOtherTaskSuccessful = await initializeRazorpay(studentName);
    // console.log(payStats);
 
birth_
 
eventsList[eventsList.length - 1]
 
 // Replace with your date string
 
 // const data = details.time;
  // const dateObj = new Date(data);
  // const formattedDate = dateObj.toISOString().split("T")[0];
  // console.log(formattedDate);
  // setRegDate(data.split("T")[0]);
  // console.log(regDate);
 
// export const register = (req, res) => {
//   try {
//     const maxRegistrations = 180;

//     const checkRegistrationsQuery =
//       "SELECT COUNT(*) AS registrationCount FROM register";

//     db.query(checkRegistrationsQuery, (err, data) => {
//       if (err) {
//         return res.status(500).json(err);
//       }

//       const registrationsCount = data[0].registrationCount;
//       if (registrationsCount >= maxRegistrations) {
//         return res.status(400).json({
//           error: "Sorry, registrations are closed. All seats have been filled.",
//         });
//       }

//       const formData = req.body;
//       const classForAdmission = formData.class;
//       const dateOfBirth = new Date(formData.selectedDate);

//       const currentDate = new Date();
//       const ageInMonths =
//         (currentDate.getFullYear() - dateOfBirth.getFullYear()) * 12 +
//         (currentDate.getMonth() - dateOfBirth.getMonth());

//       console.log(currentDate, ageInMonths);
//       const ageRanges = {
//         Nursery: { min: 2 * 12 + 9, max: 3 * 12 + 8 },
//         KG_Lower: { min: 3 * 12 + 9, max: 4 * 12 + 8 },
//         KG_Upper: { min: 4 * 12 + 9, max: 5 * 12 + 8 },
//       };

//       const validAgeRange = ageRanges[classForAdmission];
//       if (
//         !validAgeRange ||
//         ageInMonths < validAgeRange.min ||
//         ageInMonths > validAgeRange.max
//       ) {
//         return res.status(400).json({
//           error: "Invalid age range for the selected class.",
//         });
//       }

//       const checkStudentExistsQuery = `
//       SELECT COUNT(*) AS studentCount
//       FROM register
//       WHERE firstname = ? AND father_name = ? AND mother_name = ? AND mobile = ?
//     `;

//       const queryParams = [
//         formData.fname,
//         formData.fathern,
//         formData.mothern,
//         formData.mobile,
//       ];

//       db.query(checkStudentExistsQuery, queryParams, (err, result) => {
//         if (err) {
//           console.error("Error checking if student exists in MySQL:", err);
//           res.status(500).json({ error: "Internal server error" });
//         } else {
//           const studentCount = result[0].studentCount;
//           if (studentCount > 0) {
//             return res.status(400).json({
//               error:
//                 "A student with the same name, father's name, mother's name, and mobile number already exists.",
//             });
//           } else {
//             const combinedData = formData.birth_certificate_file;
//             const query = `
//             INSERT INTO register (
//               class_for_admission,
//               present_school,
//               present_class,
//               present_school_city,
//               firstname,
//               middlename,
//               lastname,
//               date_of_birth,
//               dob_in_words,
//               Age,
//               gender,
//               Religion,
//               caste,
//               category,
//               mobile,
//               birth_certificate,
//               no_of_boys,
//               No_of_girls,
//               adhar_number,
//               father_name,
//               father_qualification,
//               father_occupation,
//               father_profession,
//               father_employer,
//               father_business_details,
//               father_email,
//               father_mobile,
//               father_annual_income,
//               father_residential_address,
//               father_office_address,
//               mother_name,
//               mother_qualification,
//               mother_occupation,
//               mother_profession,
//               mother_employer,
//               mother_business_details,
//               mother_email,
//               mother_mobile,
//               mother_annual_income,
//               mother_residential_address,
//               office_address,
//               child_one_name,
//               child_one_addmission_no,
//               child_one_class,
//               child_one_section,
//               child_two_name,
//               child_two_addmission_no,
//               child_two_class,
//               child_two_section
//             )
//            VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
//           `;

//             const queryParams = [
//               formData.class_for_admission,
//               formData.present_school,
//               formData.present_class,
//               formData.present_school_city,
//               formData.firstname,
//               formData.middlename,
//               formData.lastname,
//               formData.date_of_birth,
//               formData.dob_in_words,
//               formData.Age,
//               formData.gender,
//               formData.Religion,
//               formData.caste,
//               formData.category,
//               formData.mobile,
//               formData.birth_certificate,
//               formData.no_of_boys,
//               formData.No_of_girls,
//               formData.adhar_number,
//               formData.father_name,
//               formData.father_qualification,
//               formData.father_occupation,
//               formData.father_profession,
//               formData.father_employer,
//               formData.father_business_details,
//               formData.father_email,
//               formData.father_mobile,
//               formData.father_annual_income,
//               formData.father_residential_address,
//               formData.father_office_address,
//               formData.mother_name,
//               formData.mother_qualification,
//               formData.mother_occupation,
//               formData.mother_profession,
//               formData.mother_employer,
//               formData.mother_business_details,
//               formData.mother_email,
//               formData.mother_mobile,
//               formData.mother_annual_income,
//               formData.mother_residential_address,
//               formData.office_address,
//               formData.child_one_name,
//               formData.child_one_addmission_no,
//               formData.child_one_class,
//               formData.child_one_section,
//               formData.child_two_name,
//               formData.child_two_addmission_no,
//               formData.child_two_class,
//               formData.child_two_section
//             ];
//             db.query(query, queryParams, (err, result) => {
//               if (err) {
//                 console.error("Error inserting data into MySQL:", err);
//                 res.status(500).json({ error: "Internal server error" });
//               } else {
//                 res.status(200).json({ message: "Registration successful!" });
//               }
//             });
//           }
//         }
//       });
//     });
//   } catch (error) {
//     console.log(error);
//   }
// };

 
// import React, { useEffect, useState } from "react";
// import { styled } from "styled-components";
// import axios from "axios";
// import { useNavigate } from "react-router-dom";

// const StudentDetails = () => {
//   const navigate = useNavigate();
//   const [studentData, setStudentData] = useState([]);
//   const [classFilter, setClassFilter] = useState("");
//   const [filteredStudentData, setFilteredStudentData] = useState([]);
//   const [currentPage, setCurrentPage] = useState(1);
//   const studentsPerPage = 10;

//   const getStudentData = async () => {
//     const response = await axios.get(
//       `http://localhost:4000/api/auth/getAllStudent`
//     );
//     const data = response.data;
//     console.log(data);
//     if (classFilter) {
//       const filteredData = data.filter(
//         (item) => item.present_class === classFilter
//       );
//       setFilteredStudentData(filteredData);
//     } else {
//       setFilteredStudentData(data);
//     }
//   };

//   useEffect(() => {
//     getStudentData();
//   }, [classFilter]);

//   const handleClassFilterChange = (event) => {
//     const selectedClass = event.target.value;
//     setClassFilter(selectedClass);
//     setCurrentPage(1);
//   };

//   const nextPage = () => setCurrentPage(currentPage + 1);
//   const prevPage = () => setCurrentPage(currentPage - 1);

//   const indexOfLastStudent = currentPage * studentsPerPage;
//   const indexOfFirstStudent = indexOfLastStudent - studentsPerPage;
//   const currentStudents = filteredStudentData.slice(
//     indexOfFirstStudent,
//     indexOfLastStudent
//   );

//   console.log(studentData);

//   const handleMoreDetails = (id) => {
//     navigate(`/view-student-data/${id}`);
//   };
//   return (
//     <>
//       <Container>
//         <h1 class="text-center">Students Details</h1>
//         <div class="container mt-5 mb-5">
//           <table>
//             <thead>
//               <tr>
//                 <th className="header-cell">
//                   <select
//                     id="class-filter"
//                     value={classFilter}
//                     onChange={handleClassFilterChange}
//                   >
//                     <option value="">All</option>
//                     <option value="1st">1st</option>
//                     <option value="2nd">2nd</option>
//                     <option value="3rd">3rd</option>
//                     <option value="4th">4th</option>
//                     <option value="5th">5th</option>
//                     <option value="6th">6th</option>
//                     <option value="7th">7th</option>
//                     <option value="8th">8th</option>
//                     <option value="9th">9th</option>
//                     <option value="11th">11th</option>
//                   </select>
//                 </th>
//                 <th className="header-cell">Firstname</th>
//                 <th className="header-cell">Lastname</th>
//                 <th className="header-cell">Class</th>
//                 <th className="header-cell">Date of Birth</th>
//                 <th className="header-cell">Previous School</th>
//                 <th className="header-cell">City</th>
//                 <th className="header-cell">Father Name</th>
//                 <th className="header-cell">Father Mobile No</th>
//                 <th className="header-cell">Mother Name</th>
//                 <th className="header-cell">Mother Mobile No</th>
//                 <th className="header-cell">Religion</th>
//                 <th className="header-cell">More Details</th>
//               </tr>
//             </thead>
//             <tbody>
//               {currentStudents?.map((item, index) => (
//                 <tr key={index}>
//                   <td>{item.class_for_admission}</td>
//                   <td>{item.firstname}</td>
//                   <td>{item.lastname}</td>
//                   <td>{item.present_class}</td>
//                   <td>{item.date_of_birth}</td>
//                   <td>{item.present_school}</td>
//                   <td>{item.present_school_city}</td>
//                   <td>{item.father_name}</td>
//                   <td>{item.father_mobile}</td>
//                   <td>{item.mother_name}</td>
//                   <td>{item.mother_mobile}</td>
//                   <td>{item.Religion}</td>
//                   <td>
//                     <button
//                       className="btn btn-danger"
//                       style={{ backgroundColor: "#ff3f34" }}
//                       onClick={() => handleMoreDetails(item.id)}
//                     >
//                       More Details
//                     </button>
//                   </td>
//                 </tr>
//               ))}
//             </tbody>
//           </table>

//           <div className="pagination-section mt-3">
//             <div className="pagination">
//               <button
//                 onClick={prevPage}
//                 disabled={currentPage === 1}
//                 className="btn btn-danger"
//               >
//                 Previous
//               </button>
//               <span className="fs-4 mx-3">{currentPage}</span>
//               <button
//                 onClick={nextPage}
//                 className="btn btn-success"
//                 disabled={currentStudents.length < studentsPerPage}
//               >
//                 Next
//               </button>
//             </div>
//           </div>
//         </div>
//       </Container>
//     </>
//   );
// };

// export default StudentDetails;
// const Container = styled.div`
//   height: 100vh;
//   .headDiv {
//     background: #ff3f34;
//     padding: 1rem 0;
//     color: white;
//   }

//   table {
//     border-collapse: collapse;
//     width: 100%;
//     border: 1px solid #ccc;
//     background-color: #ffffff6b;
//   }

//   thead {
//     background-color: red;
//   }

//   th,
//   td {
//     border: 1px solid #ccc;
//     padding: 8px;
//     text-align: center;
//   }

//   th {
//     background-color: #f2f2f2;
//   }

//   th.header-cell {
//     background-color: #00b894;
//     /* Change to your preferred color */
//     color: white;
//   }
//   .pagination-section {
//     float: right;
//   }
// `;

 
disable-right-click
 
    pointer-events: none;
 
Click
 
